{
  "name": "vscode-clj-zprint",
  "displayName": "vscode-clj-zprint",
  "description": "Wrapper for zprint to format Clojure code.",
  "version": "0.0.10",
  "publisher": "rflagreca",
  "repository": "https://github.com/rflagreca/vscode-clj-zprint",
  "license": "GPL-3.0-or-later",
  "engines": {
    "vscode": "^1.51.0"
  },
  "categories": [
    "Formatters"
  ],
  "activationEvents": [
    "onLanguage:clojure",
    "onCommand:vscode-clj-zprint.refresh",
    "onCommand:vscode-clj-zprint.currentconfig"
  ],
  "main": "./extension.js",
  "contributes": {
    "commands": [
      {
        "command": "vscode-clj-zprint.refresh",
        "title": "Zprint: Refresh Configuration"
      },
      {
        "command": "vscode-clj-zprint.currentconfig",
        "title": "Zprint: Output Current non-Default Configuration"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "vscode-clj-zprint.refresh",
          "when": "editorLangId == clojure"
        },
        {
          "command": "vscode-clj-zprint.currentconfig",
          "when": "editorLangId == clojure"
        }
      ]
    },
    "configuration": {
      "title": "Zprint",
      "properties": {
        "vscode-clj-zprint.width": {
          "type": "string",
          "default": null,
          "description": "Width to format code. If no value, ignored."
        },
        "vscode-clj-zprint.Styles.ArrayOfStyles": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": null,
          "description": "Specify styles, which will be applied in the order given."
        },
        "vscode-clj-zprint.Styles.UseOnlyTheseStyles": {
          "type": "boolean",
          "default": false,
          "markdownDescription": "Ignore any `:style` configured in external files and use only the styles specified in the `Array Of Styles`.  `Community Formatting` will be ignored, as will any `:style` in the `Option Map`."
        },
        "vscode-clj-zprint.CommunityFormatting": {
          "type": "boolean",
          "default": false,
          "markdownDescription": "Use community formatting approach.  Adds the `:community` style."
        },
        "vscode-clj-zprint.IgnoreExternalFiles": {
          "type": "boolean",
          "default": false,
          "markdownDescription": "Do not read any `.zprintrc` or `.zprint.edn` files."
        },
        "vscode-clj-zprint.OptionsMap": {
          "type": "string",
          "editPresentation": "multilineText",
          "default": null,
          "description": "Enter a properly formatted options map. It will be applied after all other configuration."
        }
      }
    }
  },
  "scripts": {
    "lint": "eslint .",
    "pretest": "yarn run lint",
    "test": "node ./test/runTest.js",
    "clean": "rm -rf .shadow-cljs/ && rm -f extension.js",
    "compile": "yarn run shadow-cljs compile :extension",
    "watch": "yarn run shadow-cljs watch :extension",
    "release": "yarn run clean && yarn run shadow-cljs release :extension",
    "package": "yarn run release && vsce package",
    "package_debug": "yarn run clean && yarn run shadow-cljs compile :extension && vsce package"
  },
  "devDependencies": {
    "@types/vscode": "^1.51.0",
    "@types/glob": "^7.1.3",
    "@types/mocha": "^8.0.0",
    "@types/node": "^12.11.7",
    "eslint": "^7.9.0",
    "glob": "^7.1.6",
    "mocha": "^8.1.3",
    "typescript": "^4.0.2",
    "vscode-test": "^1.4.0",
    "shadow-cljs": "^2.11.7"
  }
}
